<?xml version="1.0" encoding="utf-8"?>

<!--
  SpikeLite C# IRC Bot
  Copyright (c) 2008-2011 FreeNode ##Csharp Community

  This source is licensed under the terms of the MIT license. Please see the 
  distributed license.txt for details.
-->

<!-- 
  This is our generic beans bootstrapper file. Here we set up the major collaborators of the bot: our
  module manager which manages our modules, our communications manager that wraps our IRC lib and other misc
  forms of communication, and our authentication manager which handles authentication.
-->

<objects xmlns="http://www.springframework.net">
  <!-- 
       This is our Bot runner, brought in from the SpikeLite assembly. This is what we delegate control to. 
       You probably don't want to change the injected beans either, unless you have a good reason.
  -->
  <object id="SpikeLite" type="SpikeLite.SpikeLite, SpikeLite">
    <property name="ModuleManager" ref="ModuleManager" />
    <property name="CommunicationManager" ref="CommunicationManager" />
  </object>

  <!-- 
      This is our module manager, in charge of keeping track of our modules and who responds to what message. 
      We make use of the beans-modules to define all the individual modules inserted here.
  -->
  <object id="ModuleManager" type="SpikeLite.Modules.ModuleManager, SpikeLite">
    <!-- Inject our messaging bean. -->
    <property name="CommunicationManager" ref="CommunicationManager" />
    
    <!-- This property is actually set in beans-modules, but overridden in beans-overrides. -->
    <property name="Modules" ref="ModuleList" />
  </object>
  
  <!-- 
       This is our communication manager, responsible for passing messages bettween modules and the outside
       world.
  -->
  <object id="CommunicationManager" type="SpikeLite.Communications.CommunicationManager, SpikeLite">
    <property name="IrcClientType" ref="IrcClientType" />
    <property name="NetworkList">
      <list element-type="SpikeLite.Communications.Irc.Configuration.Network, SpikeLite">
        <ref object="Network" />
      </list>
    </property>
    <property name="MessageParser" ref="MessageParserAdvice" />
    <property name="SupportsIdentification" value="${server.supports.identification}" />
    <property name="BotContext" ref="SpikeLite" />
  </object>

  <object id="IrcClientType" type="Spring.Objects.Factory.Config.MethodInvokingFactoryObject, Spring.Core">
    <property name="TargetType" value="System.Type"/>
    <property name="TargetMethod" value="GetType"/>
    <property name="Arguments">
      <list>
        <value>SpikeLite.Irc.ThresherIrc.IrcClient, SpikeLite.Irc.ThresherIrc</value>
      </list>
    </property>
  </object>

  <object id="Network" type="SpikeLite.Communications.Irc.Configuration.Network, SpikeLite">
    <property name="NetworkName" value="${network.name}" />
    <property name="BotNickname" value="${bot.nick}" />
    <property name="BotRealname" value="${bot.realname}" />
    <property name="BotUsername" value="${bot.username}" />
    <property name="AccountPassword" value="${bot.accountpass}" />
    <property name="ServerList">
      <list element-type="SpikeLite.Communications.Irc.Configuration.Server, SpikeLite">
        <ref object="Server" />
      </list>
    </property>
  </object>

  <object id="Server" type="SpikeLite.Communications.Irc.Configuration.Server, SpikeLite">
    <property name="Host" value="${server.host}" />
    <property name="Port" value="${server.port}" />
    <property name="ChannelList" ref="ChannelList" />
  </object>

  <object id="ChannelList" type="SpikeLite.UI.Cli.ChannelList, SpikeLite.UI.Cli">
    <constructor-arg index="0">
      <list element-type="SpikeLite.Communications.Irc.Configuration.Channel, SpikeLite">
        <object id="TestingChannel" type="SpikeLite.Communications.Irc.Configuration.Channel, SpikeLite">
          <property name="Name" value="#kog" />
        </object>
      </list>
    </constructor-arg>
  </object>

  <object id="MessageParser" type="SpikeLite.Communications.Messaging.PrivmsgParser, SpikeLite">
    <property name="AuthHandler" ref="DefaultAuthenticationManager" />
    <property name="CommunicationManager" ref="CommunicationManager" />
    <property name="UserTokenCache" ref="UserTokenCache" />
  </object>

  <object id="MessageParserProxy" type="SpikeLite.Communications.Messaging.PrivmsgParserAdvice, SpikeLite" />

  <object id="MessageParserAdvice" type="Spring.Aop.Framework.ProxyFactoryObject, Spring.Aop">
    <property name="proxyInterfaces" value="SpikeLite.Communications.Messaging.IPrivmsgParser" />
    <property name="targetName" value="MessageParser" />
    <property name="InterceptorNames">
      <list>
        <value>MessageParserProxy</value>
      </list>
    </property>
  </object>

  <!-- This is our default access manager. -->
  <object id="DefaultAuthenticationManager" type="SpikeLite.AccessControl.RootAuthModule, SpikeLite">
    <property name="AuthModule" ref="IrcAuthenticationModule" />
  </object>

  <object id="IrcAuthenticationModule" type="SpikeLite.AccessControl.IrcAuthenticationModule, SpikeLite">
    <constructor-arg index="0" ref="KnownHostDao" />
    <constructor-arg index="1" ref="seedCloaks" />
  </object>

  <!-- Holds a list of cloaks to use when running the bot for the first time. -->
  <object id="seedCloaks" type="SpikeLite.UI.Cli.Spring.CloakList, SpikeLite.UI.Cli">
    <constructor-arg index="0">
      <list element-type="SpikeLite.Domain.Model.Authentication.KnownHost, SpikeLite.Domain">        
        <!-- Create a user for Kog. -->
        <object id ="kog" type="SpikeLite.Domain.Model.Authentication.KnownHost, SpikeLite.Domain">
          <property name="AccessLevel" value="Root"/>
          <property name="HostMatchType" value="Start"/>
          <property name="HostMask" value="about/csharp/regular/Kog"/>
        </object>

        <!-- Create a user for Andy. -->
        <object id ="smippy" type="SpikeLite.Domain.Model.Authentication.KnownHost, SpikeLite.Domain">
          <property name="AccessLevel" value="Root"/>
          <property name="HostMatchType" value="Start"/>
          <property name="HostMask" value="about/csharp/regular/smellyhippy"/>
        </object>
        
        <!-- Create a user for KotS. -->
        <object id ="KeeperOfTheSoul" type="SpikeLite.Domain.Model.Authentication.KnownHost, SpikeLite.Domain">
          <property name="AccessLevel" value="Root"/>
          <property name="HostMatchType" value="Start"/>
          <property name="HostMask" value="about/csharp/regular/KeeperOfTheSoul"/>
        </object>
        
        <!-- And now everyone else, the regulars. They all have the same access type... -->
        <object id ="Regulars" type="SpikeLite.Domain.Model.Authentication.KnownHost, SpikeLite.Domain">
          <property name="AccessLevel" value="Public"/>
          <property name="HostMatchType" value="Start"/>
          <property name="HostMask" value="about/csharp/"/>
        </object>
      </list>
    </constructor-arg>
  </object>

  <object id="UserTokenCache" type="SpikeLite.AccessControl.UserTokenCache, SpikeLite" />

  <!-- We provide default values for all the placheolder values in the bot, so that if a user does not include
       this in the beans-overrides.xml we don't wind up throwing a random, unhelpful exception. You really should
       define this in your beans-overrides though. -->
  <object name="botPropertyConfigurer" type="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurer, Spring.Core">
    <property name="Properties">
      <name-values>

        <!-- Set values for our bot's setup. -->
        <add key="network.name" value="Localhost" />
        <add key="bot.nick" value="SpikeLite" />
        <add key="bot.realname" value="##CSharp irc bot" />
        <add key="bot.username" value="SpikeLite" />
        <add key="bot.accountpass" value="password" />
        <add key="server.supports.identification" value="true" />

        <!-- Configure our server -->
        <add key="server.host" value="127.0.0.1" />
        <add key="server.port" value="6667" />

        <!-- Configure our API keys -->
        <add key="apikeys.google" value="NOT CONFIGURED" />
        <add key="apikeys.bing" value="NOT CONFIGURED" />

        <!-- Configure our referrers -->
        <add key="referrers.googleajax" value="NOT CONFIGURED" />

        <!-- Database setup -->
        <add key="db.provider" value="SQLite-1.0.65" />
        <add key="db.connectionstring" value="Data Source=spikelite.db;Version=3;New=True" />
        <add key="db.dialect" value="NHibernate.Dialect.SQLiteDialect" />
        <add key="db.driver" value="NHibernate.Driver.SQLite20Driver" />
      </name-values>
    </property>
  </object>
</objects>