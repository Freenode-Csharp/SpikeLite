<?xml version="1.0"?>

<!--
  SpikeLite C# IRC Bot
  Copyright (c) 2009 FreeNode ##Csharp Community

  This source is licensed under the terms of the MIT license. Please see the 
  distributed license.txt for details.
-->

<project name="SharpBot" default="build" basedir=".">
	<description>FreeNode Csharp Bot</description>
	
	<target name="build" description="Wraps the build process and builds either with XBuild, or MSBuild dependong on if the host is win32 or not." depends="build-windows, build-nonwindows, dist">
		<echo message="Build completed via dependencies above."/>
	</target>
	
	<target name="build-windows" description="Builds the bot on a standard Windows, MS-CLR environment via MSBuild" depends="clean" if="${platform::is-win32()}">
		<echo message="Win32 environment detected... building via MSBuild."/>
	
		<!-- Build Debug artifacts -->
		<msbuild project="SpikeLite.sln">
              <arg value="/property:Configuration=debug" />                                  
              <arg value="/t:Rebuild" />
		</msbuild>	
	
		<!-- Build Release artifacts -->
		<msbuild project="SpikeLite.sln">
              <arg value="/property:Configuration=release" />                                  
              <arg value="/t:Rebuild" />
		</msbuild>
	</target>
	
	<target name="build-nonwindows" description="Builds the bot on an environment that does not have MSBuild on it, namely *Nix" depends="clean" unless="${platform::is-win32()}">
		<echo message="Non-Win32 environment detected... building via XBuild."/>
		
		<!-- Build Debug artifacts -->
		<exec program="xbuild">
			<arg value="SpikeLite.sln"/>
			<arg value="/target:Rebuild"/>
			<arg value="/p:Configuration=release"/>
		</exec>
		
		<!-- Build Debug artifacts -->
		<exec program="xbuild">
			<arg value="SpikeLite.sln"/>
			<arg value="/target:Rebuild"/>
			<arg value="/p:Configuration=debug"/>
		</exec>
	</target>
	
	
	<target name="dist" description="Creates a debug and release zip file for distribution.">
		<!-- Zip the Release quality artifacts -->
		<zip zipfile="${path::combine('output', 'SpikeLite-Release.zip')}">
			<fileset basedir="${path::combine('output', 'Release')}">
				<include name="**/*"/>
			</fileset>
		</zip>

		<!-- Zip the Debug quality artifacts -->
		<zip zipfile="${path::combine('output', 'SpikeLite-Debug.zip')}">
			<fileset basedir="${path::combine('output', 'Debug')}">
				<include name="**/*"/>
			</fileset>
		</zip>
	</target>

	<target name="clean" description="Clean previously built artifacts">
		<echo message="Cleaning all obj directories..."/>
		<delete >
			<fileset basedir=".">
				<include name="**\obj\**"/>
			</fileset>
		</delete> 
		
		<echo message="cleaning the output directory."/>
		<delete dir="output"/>
	</target>
</project>
