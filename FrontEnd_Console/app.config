<?xml version="1.0"?>
<!--
  SpikeLite C# IRC Bot
  Copyright (c) 2008-2011 FreeNode ##Csharp Community

  This source is licensed under the terms of the MIT license. Please see the 
  distributed license.txt for details.
-->
<!--
  Set up the various technologies used by the bot. Most of the actual configuration that normally goes into
  an app.config can be found in the associated beans files. Logging can be found in the log4net.xml.
-->
<configuration>
  <configSections>
    <sectionGroup name="spring">
      <section name="context" type="Spring.Context.Support.ContextHandler, Spring.Core"/>
      <section name="parsers" type="Spring.Context.Support.NamespaceParsersSectionHandler, Spring.Core"/>
    </sectionGroup>
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging"/>
    </sectionGroup>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net"/>
  </configSections>

  <!-- Bootstrap all our beans for Spring.NET, by file. By default all beans should be embedded, with critical
       setup information in our beans override file. -->
  <spring>
    <context>
      <resource uri="assembly://FrontEnd_Console/FrontEnd_Console/Spring.Config.beans.xml"/>
      <resource uri="assembly://FrontEnd_Console/FrontEnd_Console/Spring.Config.beans-modules.xml"/>
      <resource uri="assembly://FrontEnd_Console/FrontEnd_Console/Spring.Config.beans-nhibernate.xml"/>
      
      <!-- This file contains values that override our default beans setup. -->
      <resource uri="file://Spring/Config/beans-overrides.xml"/>
    </context>
    <parsers>
      <parser type="Spring.Data.Config.DatabaseNamespaceParser, Spring.Data"/>
      <parser type="Spring.Transaction.Config.TxNamespaceParser, Spring.Data"/>
    </parsers>
  </spring>

  <!-- Tell Log4NET that we're using an external file. Be careful though, if you update the log4net.xml using
       the default logging setup on the file-based appender, it'll delete your spikelite.log when it rehashes. -->
  <common>
    <logging>
      <factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4Net">
        <arg key="configType" value="FILE-WATCH"/>
        <arg key="configFile" value="~/log4net.xml"/>
      </factoryAdapter>
    </logging>
  </common>
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/></startup></configuration>
